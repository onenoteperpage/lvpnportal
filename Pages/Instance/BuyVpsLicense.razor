@page "/buy-vps-license"
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager

<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Purchase License</h1>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-dark">Select License Period</h6>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <div class="col-12">
                    <p class="lead">
                        Pick a 1, 3, 6, or 12-month license. Move your VPN service around as you like during the license period for more flexibility.
                        Enjoy our high-quality VPN for the chosen time.
                    </p>
                    <p class="lead">
                        Effortlessly handle multiple VPN services at the same time. When a license ends, the VPN service wraps up smoothly, keeping
                        your information safe.
                    </p>
                    <p class="lead">Thanks for choosing our VPN services. We're here to ensure a trustworthy and secure online experience for you.</p>
                    <hr class="my-4">
                    <div class="col-md-4 mb-3">
                        <select class="form-select" id="periodDropdown" @bind="selectedPeriod">
                            <option value="0">Select period...</option>
                            <option value="1">1 month</option>
                            <option value="3">3 months</option>
                            <option value="6">6 months</option>
                            <option value="12">12 months</option>
                        </select>
                    </div>

                    <div class="col-12 mb-3 text-center text-md-start">
                        @switch (selectedPeriod)
                        {
                            case 0:
                                break;
                            case 1:
                                <stripe-buy-button buy-button-id="buy_btn_1OJHmLKcwfnufCukdPi6RXB0"
                                                   publishable-key="pk_test_51HiceVKcwfnufCukziNp1oruZ2nuPpARzfQlWISrKODNbE3ZcvfkVZFwO4DZWY4FwPwI5unnNBLvN0qOkpd89grY00gltyqH3r"
                                                   customer-email="@email"
                                                   client-reference-id="@usrId">
                                </stripe-buy-button>
                                break;
                            case 3:
                                <stripe-buy-button buy-button-id="buy_btn_1OJIBMKcwfnufCukuvYGzD8F"
                                                   publishable-key="pk_test_51HiceVKcwfnufCukziNp1oruZ2nuPpARzfQlWISrKODNbE3ZcvfkVZFwO4DZWY4FwPwI5unnNBLvN0qOkpd89grY00gltyqH3r"
                                                   customer-email="@email"
                                                   client-reference-id="@usrId">
                                </stripe-buy-button>
                                break;
                            case 6:
                                <stripe-buy-button buy-button-id="buy_btn_1OJIDRKcwfnufCukWeHh9J3m"
                                                   publishable-key="pk_test_51HiceVKcwfnufCukziNp1oruZ2nuPpARzfQlWISrKODNbE3ZcvfkVZFwO4DZWY4FwPwI5unnNBLvN0qOkpd89grY00gltyqH3r"
                                                   customer-email="@email"
                                                   client-reference-id="@usrId">
                                </stripe-buy-button>
                                break;
                            case 12:
                                <stripe-buy-button buy-button-id="buy_btn_1OJIF2KcwfnufCuk0uSGCcjN"
                                                   publishable-key="pk_test_51HiceVKcwfnufCukziNp1oruZ2nuPpARzfQlWISrKODNbE3ZcvfkVZFwO4DZWY4FwPwI5unnNBLvN0qOkpd89grY00gltyqH3r"
                                                   customer-email="@email"
                                                   client-reference-id="@usrId">
                                </stripe-buy-button>
                                break;
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
                            private Task<AuthenticationState>? authenticationState { get; set; }

                            private string usrId = string.Empty;
                            private string email = string.Empty;
                            private int selectedPeriod = 0;

                            protected override async Task OnInitializedAsync()
                            {
                                if (authenticationState is not null)
                                {
                                    var state = await authenticationState;
                                    //if (state?.User?.Identity?.IsAuthenticated != true)
                                    //    NavigationManager.NavigateTo("/");

                                    email = state?.User?.Identity?.Name ?? "UNKNOWN USER";
                                    usrId = EncryptionHelper.GenerateToken(email);
                                }

                                await base.OnInitializedAsync();
                            }
                        }
